{"version":3,"file":"static/js/912.4d55ab44.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contact/Contact.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js","pages/pages.styled.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = ({ contacts: {items} }) => items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n    }\n)","import styled from 'styled-components'\n\nexport const ContactWrap = styled.div`\n  /* display:flex;\n  flex-direction: row;\n  gap: 10px; */\n  padding: ${({ theme }) => theme.spacing(10)};\n  /* background-color: ${({ theme }) => theme.colors.light}; */\n  background-color: lightskyblue;\n  border-radius: ${({ theme }) => theme.spacing(2)};\n\n  /* color: ${({ theme }) => theme.colors.gray}; */\n  color: gray;\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n\n  position: relative;\n  \n`;\n\nexport const ButtonDel = styled.button`\n  font-size:14px;\n  border-radius: 5px;\n  border: 1px solid lightgrey;\n`;","import styled from 'styled-components'\n\nimport { Field, Form, ErrorMessage } from \"formik\";\n\nexport const PhonebookForm = styled(Form)`\n  display:flex;\n  flex-direction:column;\n  gap: 15px;\n  border: 1px solid black;\n  border-radius:5px;\n  padding: 10px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const Input = styled(Field)`\n \n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\ncolor: red;\nfont-size:12px;  \n`;","import { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { Label, ErrorMsg, Input, PhonebookForm} from \"./ContactForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { addContact } from \"redux/contacts/operations\";\n\n\n\n\nexport const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n    .test(\n      \"name\",\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      value => /^[a-zA-Zа-яА-ЯіІїЇ ]+((['][a-zA-Zа-яА-ЯіІїЇ ])?[a-zA-Zа-яА-ЯіІїЇ]*)*$/.test(value)\n    )\n    .required('Required'),\n    number: Yup.string()\n    .test(\n      \"number\",\n      \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n      value =>/\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/.test(value)\n    )\n    .required('Required'),\n  });\n\nexport const ContactForm = ()=>{\n  const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (contact, actions)=> {\n        const isExist = contacts.some(\n        item => item.name.toLowerCase() === contact.name.toLowerCase()\n            || item.number === contact.number\n        );\n    \n        if (isExist) {\n          alert(`${contact.name} or ${contact.number} is already in contacts.`);\n            return;\n        }\n        dispatch(addContact(contact));\n        actions.resetForm();\n  };\n\nreturn(\n<Formik\n    initialValues={\n      {\n          name: \"\",\n          number: \"\",\n      }}\n      \n    validationSchema={SignupSchema}\n    onSubmit={(contact, actions)=>handleSubmit(contact, actions)}\n    >\n\n  <PhonebookForm>\n    <Label>Name\n    <Input name=\"name\" type=\"text\"/>\n    <ErrorMsg name=\"name\" component=\"span\"/>\n    </Label>\n    \n    <Label>Number\n    <Input name=\"number\" type=\"tel\"/>\n    <ErrorMsg name=\"number\" component=\"span\"/>\n    </Label>\n\n   <button type=\"submit\">\n       Add contact\n     </button>\n  </PhonebookForm>\n  </Formik>\n)}\n","// import styled from 'styled-components';\nexport const customStyles = {\n        overlay: {\n              position: 'fixed',\n              top: '0',\n              left: '0',\n              width: '100vw',\n              height: '100vh',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: 'rgba(229, 227, 234, 0.8)',\n              zIndex: '1200',        \n},\n        content: {\n            top: '50%', \n            left: '50%', \n            right: 'auto',\n            bottom: 'auto',\n            transform: 'translate(-50%, -50%)', \n            padding: '0', \n            border: 'none', \n            maxWidth: 'calc(100vw - 48px)',\n            maxHeight: 'calc(100vh - 24px)',\n            overflow: 'hidden',\n        },\n};","import { useDispatch } from 'react-redux';\nimport { Formik } from \"formik\";\nimport Modal from \"react-modal\";\nimport { SignupSchema } from \"components/ContactForm/ContactForm\";\nimport { editContact } from 'redux/contacts/operations';\nimport { Label, ErrorMsg, Input, PhonebookForm} from \"components/ContactForm/ContactForm.styled\";\nimport { customStyles } from './ContactEditor.styled';\n\nexport const ContactEditor = ({ isOpen, contact, onClose }) => {\n  const dispatch = useDispatch();\n  \n  const handleEditSubmit = (contact,action)=>{\n    dispatch(editContact(contact));\n    onClose();\n  }\n\n \n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      style={customStyles}>\n    <div>\n        <h2>Edit Contact</h2>\n        <Formik\n              initialValues={\n                {\n                    id: contact.id,\n                    name: contact.name,\n                    number: contact.number,\n                }}\n                \n              validationSchema={SignupSchema}\n              onSubmit={(contact)=>handleEditSubmit(contact)}\n              >\n\n            <PhonebookForm>\n              <Label>Name\n              <Input name=\"name\" type=\"text\"/>\n              <ErrorMsg name=\"name\" component=\"span\"/>\n              </Label>\n              \n              <Label>Number\n              <Input name=\"number\" type=\"tel\"/>\n              <ErrorMsg name=\"number\" component=\"span\"/>\n              </Label>\n\n            <button type=\"submit\">\n                Edit contact\n              </button>\n              <button onClick={onClose}>Close</button>\n            </PhonebookForm>\n       </Formik>\n  </div>\n</Modal>\n\n  );\n};\n","import { deleteContact } from \"redux/contacts/operations\";\nimport { ContactWrap, ButtonDel } from \"./Contact.styled\";\nimport { useDispatch} from \"react-redux\";\nimport { ContactEditor } from \"components/ContactEditor/ContactEditor\";\nimport { useState } from \"react\";\n\nexport const Contact = ({contact })=>{\n\n  const dispatch = useDispatch();\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleEditClick = () => {\n    setIsEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setIsEdit(false);\n  };\n  \n    const {id, name, number} = contact;\n    return(\n    <ContactWrap>\n        <p>{name}: {number}</p>\n        <ButtonDel onClick={()=> dispatch(deleteContact(id))}>Delete</ButtonDel>\n        <button onClick={handleEditClick}>edit </button>\n        {isEdit && (\n          <ContactEditor\n            isOpen = {isEdit}\n          contact={{ id, name, number }}\n          onClose={handleEditClose}\n        />\n      )}\n    </ContactWrap>\n    )\n}","import styled from 'styled-components'\n\nexport const ContactListWrap = styled.ul`\n  padding:10px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 10px;\n  width:100%;\n\n`;\nexport const ListItem = styled.li`\n  margin-bottom:8px;\n  width: calc((100% - 24px) / 3);\n  height: 100%;\n`;","import { Contact } from \"components/Contact/Contact\";\nimport { ContactListWrap, ListItem } from \"./ContactList.styled\";\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from \"redux/contacts/selectors\";\n\nexport const ContactList =( )=>{\n  const contacts = useSelector(selectVisibleContacts);\n\n    return(\n      <div>\n        <ContactListWrap>\n          {contacts.map(contact => (\n            <ListItem key={contact.id}>\n                <Contact contact={contact}/>\n            </ListItem>\n          ))}\n        </ContactListWrap>\n        </div>\n    )\n}\n\n","import styled from 'styled-components'\n\nexport const FilterWrap = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction:column;\n  gap: 8px;\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { FilterWrap, FilterLabel } from \"./Filter.styled\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { setFilter } from \"redux/contacts/filterSlise\";\n\n\nexport const Filter =()=>{\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    const searchContact = filterContact => {\n        dispatch(setFilter(filterContact))\n      };\n\n    return(\n        <FilterWrap>\n            <FilterLabel htmlFor=\"filter\">Find contacts by name\n            <input name=\"filter\" type=\"text\" value={filter} placeholder=\"Search contact\"\n            onChange={evt => searchContact(evt.target.value)} />\n            </FilterLabel>\n        </FilterWrap>\n    )\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Container } from 'components/Container/Container.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactPage } from './pages.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactPage>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter/>\n      <ContactList />\n      </ContactPage>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\n\nexport const HomePage = styled.div`\n  width: 100%;\n  height: 80%;\n  border: 10px ridge black;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 24px 20px;\n\n`;\n\nexport const ImgStyle = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n`;\nexport const TextWrap = styled.div`\n position: absolute;\n top: 20%;\n right: 10px;\n\n width:50%;\n font-size: 14px;\n display:flex;\n flex-direction:column;\n align-items:center;\n\n @media (min-width: 768px) {\n    font-size: 18px;\n  }\n  @media (min-width: 1200px) {\n    font-size: 32px;\n  }\n`;\n\n\nexport const ContactPage = styled.div`\n display:flex;\n flex-direction: column;\n gap: 12px;\n width: 100%;\n`;"],"names":["selectContacts","_ref","contacts","items","selectIsLoading","state","isLoading","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactWrap","styled","_templateObject","_taggedTemplateLiteral","theme","spacing","_ref2","colors","light","_ref3","_ref4","gray","_ref5","shadows","regular","ButtonDel","_templateObject2","PhonebookForm","Form","Label","Input","Field","_templateObject3","ErrorMsg","ErrorMessage","_templateObject4","SignupSchema","Yup","shape","test","value","required","number","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","actions","some","item","alert","concat","addContact","resetForm","handleSubmit","children","_jsxs","type","component","customStyles","overlay","position","top","left","width","height","display","justifyContent","alignItems","backgroundColor","zIndex","content","right","bottom","transform","padding","border","maxWidth","maxHeight","overflow","ContactEditor","isOpen","onClose","Modal","style","id","action","editContact","handleEditSubmit","onClick","Contact","_useState","useState","_useState2","_slicedToArray","isEdit","setIsEdit","deleteContact","ContactListWrap","ListItem","ContactList","map","FilterWrap","FilterLabel","Filter","htmlFor","placeholder","onChange","evt","filterContact","target","setFilter","Contacts","useEffect","fetchContacts","Container","ContactPage","HomePage","ImgStyle","TextWrap"],"sourceRoot":""}