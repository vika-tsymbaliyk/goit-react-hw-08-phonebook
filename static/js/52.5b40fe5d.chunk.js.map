{"version":3,"file":"static/js/52.5b40fe5d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = ({ contacts: {items} }) => items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n    }\n)","import styled from 'styled-components'\n\nexport const ContactWrap = styled.div`\n  display:flex;\n  flex-direction: row;\n  gap: 10px;\n`;\n\nexport const ButtonDel = styled.button`\n  font-size:14px;\n  border-radius: 5px;\n  border: 1px solid lightgrey;\n`;","import { deleteContact } from \"redux/contacts/operations\";\nimport { ContactWrap, ButtonDel } from \"./Contact.styled\";\nimport { useDispatch} from \"react-redux\";\n\nexport const Contact = ({contact })=>{\n\n  const dispatch = useDispatch();\n  \n    const {id, name, phone} = contact;\n    return(\n    <ContactWrap>\n        <p>{name}: { phone}</p>\n        <ButtonDel onClick={()=> dispatch(deleteContact(id))}>Delete</ButtonDel>\n    </ContactWrap>\n    )\n}","import styled from 'styled-components'\n\nexport const ContactListWrap = styled.ul`\n  padding:10px;\n`;\nexport const ListItem = styled.li`\n  margin-bottom:8px;\n`;","import { Contact } from \"components/Contact/Contact\";\nimport { ContactListWrap, ListItem } from \"./ContactList.styled\";\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from \"redux/contacts/selectors\";\n\nexport const ContactList =( )=>{\n  const contacts = useSelector(selectVisibleContacts);\n\n    return(\n        <ContactListWrap>\n          {contacts.map(contact => (\n            <ListItem key={contact.id}>\n                <Contact contact={contact}/>\n            </ListItem>\n          ))}\n        </ContactListWrap>\n    )\n}\n\n","import styled from 'styled-components'\n\nimport { Field, Form, ErrorMessage } from \"formik\";\n\nexport const PhonebookForm = styled(Form)`\n  display:flex;\n  flex-direction:column;\n  gap: 15px;\n  border: 1px solid black;\n  border-radius:5px;\n  padding: 10px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const Input = styled(Field)`\n \n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\ncolor: red;\nfont-size:12px;  \n`;","import { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { Label, ErrorMsg, Input, PhonebookForm} from \"./ContactForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { addContact } from \"redux/contacts/operations\";\n\n\n\n\nconst SignupSchema = Yup.object().shape({\n    name: Yup.string()\n    .test(\n      \"name\",\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      value => /^[a-zA-Zа-яА-ЯіІїЇ ]+((['][a-zA-Zа-яА-ЯіІїЇ ])?[a-zA-Zа-яА-ЯіІїЇ]*)*$/.test(value)\n    )\n    .required('Required'),\n    number: Yup.string()\n    .test(\n      \"number\",\n      \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n      value =>/\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/.test(value)\n    )\n    .required('Required'),\n  });\n\nexport const ContactForm = ()=>{\n  const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (contact, actions)=> {\n        const isExist = contacts.some(\n        item => item.name.toLowerCase() === contact.name.toLowerCase()\n            || item.number === contact.number\n        );\n    \n        if (isExist) {\n          alert(`${contact.name} or ${contact.number} is already in contacts.`);\n            return;\n        }\n        dispatch(addContact(contact));\n        actions.resetForm();\n  };\n\nreturn(\n<Formik\n    initialValues={\n      {\n          name: \"\",\n          number: \"\",\n      }}\n      \n    validationSchema={SignupSchema}\n    onSubmit={(contact, actions)=>handleSubmit(contact, actions)}\n    >\n\n  <PhonebookForm>\n    <Label>Name\n    <Input name=\"name\" type=\"text\"/>\n    <ErrorMsg name=\"name\" component=\"span\"/>\n    </Label>\n    \n    <Label>Namber\n    <Input name=\"number\" type=\"tel\"/>\n    <ErrorMsg name=\"number\" component=\"span\"/>\n    </Label>\n\n   <button type=\"submit\">\n       Add contact\n     </button>\n  </PhonebookForm>\n  </Formik>\n)}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","_ref","contacts","items","selectIsLoading","state","isLoading","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","ContactWrap","styled","_templateObject","_taggedTemplateLiteral","ButtonDel","_templateObject2","Contact","dispatch","useDispatch","id","phone","_jsxs","children","_jsx","onClick","deleteContact","ContactListWrap","ListItem","ContactList","useSelector","map","PhonebookForm","Form","Label","Input","Field","_templateObject3","ErrorMsg","ErrorMessage","_templateObject4","SignupSchema","Yup","shape","test","value","required","number","ContactForm","Formik","initialValues","validationSchema","onSubmit","actions","some","item","alert","concat","addContact","resetForm","handleSubmit","type","component","Tasks","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}