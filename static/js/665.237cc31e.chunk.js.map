{"version":3,"file":"static/js/665.237cc31e.chunk.js","mappings":"+NAsBaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OAgBEC,EAAAA,EAAAA,MAAA,QAAMC,SA7Ba,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfP,GACEQ,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACP,EAkBgCC,aAAa,MAAKC,SAAA,EAC9Cd,EAAAA,EAAAA,MAAA,SAAAc,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOT,KAAK,aAE1BP,EAAAA,EAAAA,MAAA,SAAAc,SAAA,CAAQ,SAENC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,QAAQT,KAAK,cAE3BP,EAAAA,EAAAA,MAAA,SAAAc,SAAA,CAAQ,YAENC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWT,KAAK,iBAE9BQ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,eAG5B,ECnEe,SAASG,IACtB,OACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAAAJ,UAERC,EAAAA,EAAAA,KAAClB,EAAY,KAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n// import { Formik } from \"formik\";\n// import * as Yup from 'yup';\n\n// const SignupSchema = Yup.object().shape({\n//   name: Yup.string()\n//   .test(\n//     \"name\",\n//     \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n//   )\n//   .required('Required'),\n//   number: Yup.string()\n//   .test(\n//     \"number\",\n//     \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n//     value =>/\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/.test(value)\n//   )\n//   .required('Required'),\n// });\n\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    // <Formik\n    // initialValues={\n    //   {\n    //       name: \"\",\n    //       email: \"\",\n    //       password:\"\"\n    //   }}\n      \n    // validationSchema={SignupSchema}\n    // onSubmit={(contact, actions)=>handleSubmit(contact, actions)}\n    // >\n\n    // </Formik>\n\n\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <label >\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label >\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n","import { Container } from 'components/Container/Container.styled';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <Container>\n      \n      <RegisterForm />\n    </Container>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","children","_jsx","type","Register","Container"],"sourceRoot":""}