{"version":3,"file":"static/js/584.41faf5b5.chunk.js","mappings":"mTAIaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uJAS5BC,EAAQJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oEAKpBG,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qCAGrBM,EAAgBT,EAAAA,GAAAA,OAAaU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,mMAC/B,SAAAQ,GAAQ,OAAAA,EAALC,MAAkBC,OAAOC,KAAK,IAC5B,SAAAC,GAAO,OAAAA,EAALH,MAAgBC,OAAOG,KAAK,IAExB,SAAAC,GAAQ,OAAAA,EAALL,MAAkBC,OAAOC,KAAK,IACpC,SAAAI,GAAQ,OAAAA,EAALN,MAAkBO,QAAQ,EAAE,IAK5B,SAAAC,GAAQ,OAAAA,EAALR,MAAkBC,OAAOQ,OAAO,IAI5CC,GAAWtB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAoBwB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,yC,qHCjC/BsB,EAAiB,SAAHd,GAAsB,OAAAA,EAAhBe,SAAWC,KAAmB,EAElDC,EAAkB,SAAAC,GAAK,OAAIA,EAAMH,SAASI,SAAU,EAIpDC,EAAe,SAAAF,GAAK,OAAIA,EAAMG,MAAO,EAErCC,GAAwBC,EAAAA,EAAAA,IACjC,CAACT,EAAgBM,IACjB,SAACL,EAAUM,GACP,OAAON,EAASM,QAAO,SAAAG,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cAAc,GAC/F,I,uCCZSE,EAAcvC,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qMAG5B,SAAAQ,GAAQ,OAAAA,EAALC,MAAkBO,QAAQ,EAAE,IAC3B,SAAAJ,GAAQ,OAAAA,EAALH,MAAkBO,QAAQ,GAAG,IACvB,SAAAF,GAAQ,OAAAA,EAALL,MAAkBC,OAAOG,KAAK,IACpC,SAAAE,GAAQ,OAAAA,EAALN,MAAkBO,QAAQ,EAAE,IACvC,SAAAC,GAAQ,OAAAA,EAALR,MAAkBC,OAAO2B,IAAI,IAC3B,SAAAC,GAAQ,OAAAA,EAAL7B,MAAkB8B,QAAQC,OAAO,IAMvCC,EAAY5C,EAAAA,GAAAA,OAAaK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mSAEhB,SAAA0C,GAAO,OAAAA,EAALjC,MAAgBC,OAAO2B,IAAI,IAC/B,SAAAM,GAAO,OAAAA,EAALlC,MAAgBO,QAAQ,EAAE,IAExC,SAAA4B,GAAO,OAAAA,EAALnC,MAAgBO,QAAQ,EAAE,IAC1B,SAAA6B,GAAO,OAAAA,EAALpC,MAAgBO,QAAQ,EAAE,IAEzB,SAAA8B,GAAQ,OAAAA,EAALrC,MAAkBO,QAAQ,EAAE,IAClB,SAAA+B,GAAQ,OAAAA,EAALtC,MAAkBuC,UAAUC,WAAW,IAMlD,SAAAC,GAAO,OAAAA,EAALzC,MAAgBC,OAAOQ,OAAO,IAIrCiC,EAAatD,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qSAE3B,SAAAoD,GAAO,OAAAA,EAAL3C,MAAgBO,QAAQ,EAAE,IAC9B,SAAAqC,GAAO,OAAAA,EAAL5C,MAAgBO,QAAQ,EAAE,IAEhB,SAAAsC,GAAO,OAAAA,EAAL7C,MAAgBC,OAAO2B,IAAI,IAC/B,SAAAkB,GAAO,OAAAA,EAAL9C,MAAgBO,QAAQ,EAAE,IACnC,SAAAwC,GAAQ,OAAAA,EAAL/C,MAAkBO,QAAQ,EAAE,IAClB,SAAAyC,GAAQ,OAAAA,EAALhD,MAAkBuC,UAAUC,WAAW,IAMlD,SAAAS,GAAO,OAAAA,EAALjD,MAAgBC,OAAOQ,OAAO,IAIrCyC,EAAc9D,EAAAA,GAAAA,IAAUU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,mDACxB,SAAA4D,GAAO,OAAAA,EAALnD,MAAgBC,OAAOC,KAAK,IAC3B,SAAAkD,GAAO,OAAAA,EAALpD,MAAgBqD,UAAUC,MAAM,I,0DC7CrCC,EAAeC,EAAAA,KAAaC,MAAM,CAC3CjC,KAAMgC,EAAAA,KACLE,KACC,OACA,0IACA,SAAAC,GAAK,MAAI,gMAAwED,KAAKC,EAAM,IAE7FC,SAAS,YACVC,OAAQL,EAAAA,KACPE,KACC,SACA,gGACA,SAAAC,GAAK,MAAG,qFAAqFD,KAAKC,EAAM,IAEzGC,SAAS,cAGDE,EAAc,WACzB,IAAMhD,GAAWiD,EAAAA,EAAAA,IAAYlD,GACrBmD,GAAWC,EAAAA,EAAAA,MAgBrB,OACAC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACHC,cACE,CACI5C,KAAM,GACNqC,OAAQ,IAGdQ,iBAAkBd,EAClBe,SAAU,SAAC/C,EAASgD,GAAO,OAvBN,SAAChD,EAASgD,GACXzD,EAAS0D,MACzB,SAAAC,GAAI,OAAIA,EAAKjD,KAAKC,gBAAkBF,EAAQC,KAAKC,eAC1CgD,EAAKZ,SAAWtC,EAAQsC,MAAM,IAInCa,MAAM,GAADC,OAAIpD,EAAQC,KAAI,QAAAmD,OAAOpD,EAAQsC,OAAM,8BAG5CG,GAASY,EAAAA,EAAAA,IAAWrD,IACpBgD,EAAQM,YACd,CAWgCC,CAAavD,EAASgD,EAAQ,EAACQ,UAG/DC,EAAAA,EAAAA,MAAC7F,EAAAA,GAAa,CAAA4F,SAAA,EACZC,EAAAA,EAAAA,MAACxF,EAAAA,GAAK,CAAAuF,SAAA,CAAC,QACPb,EAAAA,EAAAA,KAACxE,EAAAA,GAAK,CAAC8B,KAAK,OAAOyD,KAAK,UACxBf,EAAAA,EAAAA,KAACxD,EAAAA,GAAQ,CAACc,KAAK,OAAO0D,UAAU,aAGhCF,EAAAA,EAAAA,MAACxF,EAAAA,GAAK,CAAAuF,SAAA,CAAC,UACPb,EAAAA,EAAAA,KAACxE,EAAAA,GAAK,CAAC8B,KAAK,SAASyD,KAAK,SAC1Bf,EAAAA,EAAAA,KAACxD,EAAAA,GAAQ,CAACc,KAAK,SAAS0D,UAAU,aAGnChB,EAAAA,EAAAA,KAACrE,EAAAA,GAAa,CAACoF,KAAK,SAAQF,SAAC,oBAK/B,ECzEYI,EAAe,CACpBC,QAAS,CACHC,SAAU,QACVC,IAAK,IACLC,KAAM,IACNC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,2BACjBC,OAAQ,QAEdC,QAAS,CACLT,IAAK,MACLC,KAAM,MACNS,MAAO,OACPC,OAAQ,OACRC,UAAW,wBACXC,QAAS,IACTC,OAAQ,OACRC,SAAU,qBACVC,UAAW,qBACXC,SAAU,WCfTC,EAAgB,SAAHzG,GAAsC,IAAhC0G,EAAM1G,EAAN0G,OAAQlF,EAAOxB,EAAPwB,QAASmF,EAAO3G,EAAP2G,QACzC1C,GAAWC,EAAAA,EAAAA,MASjB,OACEC,EAAAA,EAAAA,KAACyC,IAAK,CACJF,OAAQA,EACRC,QAASA,EACTE,MAAOzB,EAAaJ,UACtBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIb,EAAAA,EAAAA,KAAA,MAAAa,SAAI,kBACJb,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACDC,cACE,CACIyC,GAAItF,EAAQsF,GACZrF,KAAMD,EAAQC,KACdqC,OAAQtC,EAAQsC,QAGtBQ,iBAAkBd,EAClBe,SAAU,SAAC/C,GAAO,OAvBL,SAACA,EAAQuF,GAChC9C,GAAS+C,EAAAA,EAAAA,IAAYxF,IACrBmF,GACF,CAoBiCM,CAAiBzF,EAAQ,EAACwD,UAGjDC,EAAAA,EAAAA,MAAC7F,EAAAA,GAAa,CAAA4F,SAAA,EACZC,EAAAA,EAAAA,MAACxF,EAAAA,GAAK,CAAAuF,SAAA,CAAC,QACPb,EAAAA,EAAAA,KAACxE,EAAAA,GAAK,CAAC8B,KAAK,OAAOyD,KAAK,UACxBf,EAAAA,EAAAA,KAACxD,EAAAA,GAAQ,CAACc,KAAK,OAAO0D,UAAU,aAGhCF,EAAAA,EAAAA,MAACxF,EAAAA,GAAK,CAAAuF,SAAA,CAAC,UACPb,EAAAA,EAAAA,KAACxE,EAAAA,GAAK,CAAC8B,KAAK,SAASyD,KAAK,SAC1Bf,EAAAA,EAAAA,KAACxD,EAAAA,GAAQ,CAACc,KAAK,SAAS0D,UAAU,aAGpChB,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAAQF,SAAC,kBAGpBb,EAAAA,EAAAA,KAAA,UAAQ+C,QAASP,EAAQ3B,SAAC,mBAOxC,E,UCnDamC,EAAU,SAAHnH,GAAkB,IAAbwB,EAAOxB,EAAPwB,QAEjByC,GAAWC,EAAAA,EAAAA,MACjBkD,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAUfR,EAAoBtF,EAApBsF,GAAIrF,EAAgBD,EAAhBC,KAAMqC,EAAUtC,EAAVsC,OACjB,OACAmB,EAAAA,EAAAA,MAACrD,EAAW,CAAAoD,SAAA,EACRb,EAAAA,EAAAA,KAAChB,EAAW,CAAA6B,SAAEvD,KACd0C,EAAAA,EAAAA,KAAChB,EAAW,CAAA6B,SAAElB,KACdK,EAAAA,EAAAA,KAAClC,EAAS,CAACiF,QAAS,kBAAKjD,GAASyD,EAAAA,EAAAA,IAAcZ,GAAI,EAAC9B,UAACb,EAAAA,EAAAA,KAACwD,EAAAA,IAAe,CAACC,KAAM,QAC7EzD,EAAAA,EAAAA,KAACxB,EAAU,CAACuE,QAdM,WACtBO,GAAU,EACZ,EAY2CzC,UAACb,EAAAA,EAAAA,KAAC0D,EAAAA,IAAa,CAACD,KAAM,OAC1DJ,IACCrD,EAAAA,EAAAA,KAACsC,EAAa,CACZC,OAAUc,EACZhG,QAAS,CAAEsF,GAAAA,EAAIrF,KAAAA,EAAMqC,OAAAA,GACrB6C,QAfgB,WACtBc,GAAU,EACZ,MAkBF,EClCaK,EAAkBzI,EAAAA,GAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mFAQ3BuI,EAAW1I,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8MAIpB,SAAAQ,GAAQ,OAAAA,EAALC,MAAkB+H,MAAMC,MAAM,IAIjC,SAAA7H,GAAQ,OAAAA,EAALH,MAAkB+H,MAAME,MAAM,ICbjCC,EAAa,WACxB,IAAMpH,GAAWiD,EAAAA,EAAAA,IAAY1C,GAE3B,OACE6C,EAAAA,EAAAA,KAAA,OAAAa,UACEb,EAAAA,EAAAA,KAAC2D,EAAe,CAAA9C,SACbjE,EAASqH,KAAI,SAAA5G,GAAO,OACnB2C,EAAAA,EAAAA,KAAC4D,EAAQ,CAAA/C,UACLb,EAAAA,EAAAA,KAACgD,EAAO,CAAC3F,QAASA,KADPA,EAAQsF,GAEZ,OAKvB,E,UCjBauB,EAAahJ,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIvB8I,EAAcjJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mE,UCA1B+I,EAAQ,WACjB,IAAMtE,GAAWC,EAAAA,EAAAA,MACX7C,GAAS2C,EAAAA,EAAAA,IAAY5C,GAM3B,OACI+C,EAAAA,EAAAA,KAACkE,EAAU,CAAArD,UACPC,EAAAA,EAAAA,MAACqD,EAAW,CAACE,QAAQ,SAAQxD,SAAA,CAAC,yBAC9Bb,EAAAA,EAAAA,KAAA,SAAO1C,KAAK,SAASyD,KAAK,OAAOtB,MAAOvC,EAAQoH,YAAY,iBAC5DC,SAAU,SAAAC,GAAG,OARCC,EAQiBD,EAAIE,OAAOjF,WAP9CK,GAAS6E,EAAAA,EAAAA,GAAUF,IADD,IAAAA,CAQkC,QAI5D,E,oBCXe,SAASG,IACtB,IAAM9E,GAAWC,EAAAA,EAAAA,MACX/C,GAAY6C,EAAAA,EAAAA,IAAY/C,GAM9B,OAJA+H,EAAAA,EAAAA,YAAU,WACR/E,GAASgF,EAAAA,EAAAA,MACX,GAAG,CAAChF,KAGFE,EAAAA,EAAAA,KAAC+E,EAAAA,EAAS,CAAAlE,UACRC,EAAAA,EAAAA,MAACkE,EAAAA,GAAW,CAAAnE,SAAA,EACZb,EAAAA,EAAAA,KAACJ,EAAW,KACZI,EAAAA,EAAAA,KAACiF,EAAAA,GAAS,CAAApE,SAAE7D,IAAagD,EAAAA,EAAAA,KAACkF,EAAAA,EAAM,OAEhClF,EAAAA,EAAAA,KAACoE,EAAM,KACPpE,EAAAA,EAAAA,KAACgE,EAAW,QAIlB,C,sQC1BamB,EAAWjK,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wKAGD,SAAAQ,GAAQ,OAAAA,EAALC,MAAkBC,OAAO2B,IAAI,IAIpD,SAAAzB,GAAQ,OAAAA,EAALH,MAAkBO,QAAQ,EAAE,IAAI,SAAAF,GAAQ,OAAAA,EAALL,MAAkBO,QAAQ,EAAE,IAElE+I,EAAWlK,EAAAA,GAAAA,IAAUK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wEAMrBgK,EAAWnK,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kPAGxB,SAAAe,GAAQ,OAAAA,EAALN,MAAkBO,QAAQ,IAAI,IAE5B,SAAAC,GAAQ,OAAAA,EAALR,MAAkBqD,UAAUmG,KAAK,IAKvC,SAAA3H,GAAQ,OAAAA,EAAL7B,MAAkB+H,MAAMC,MAAM,IAC5B,SAAA/F,GAAQ,OAAAA,EAALjC,MAAkBqD,UAAUC,MAAM,IAEzC,SAAApB,GAAQ,OAAAA,EAALlC,MAAkB+H,MAAME,MAAM,IAC7B,SAAA9F,GAAQ,OAAAA,EAALnC,MAAkBqD,UAAUoG,KAAK,IAMxCP,EAAc9J,EAAAA,GAAAA,IAAUU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,+FAG7B,SAAA6C,GAAQ,OAAAA,EAALpC,MAAkBO,QAAQ,EAAE,IAE3B,SAAA8B,GAAQ,OAAAA,EAALrC,MAAkBO,QAAQ,EAAE,IAE9B4I,EAAY/J,EAAAA,GAAAA,IAAUwB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,+EAQrBmK,EAAgBtK,EAAAA,GAAAA,IAAUuK,IAAAA,GAAApK,EAAAA,EAAAA,GAAA,6BAC1B,SAAA+C,GAAQ,OAAAA,EAALtC,MAAkBO,QAAQ,EAAE,IAK/BqJ,EAAmBxK,EAAAA,GAAAA,IAAUyK,IAAAA,GAAAtK,EAAAA,EAAAA,GAAA,oGAC7B,SAAAkD,GAAQ,OAAAA,EAALzC,MAAkBO,QAAQ,EAAE,IAK/BuJ,EAAO1K,EAAAA,GAAAA,EAAQ2K,IAAAA,GAAAxK,EAAAA,EAAAA,GAAA,+CACjB,SAAAoD,GAAQ,OAAAA,EAAL3C,MAAkBC,OAAO2B,IAAI,IAC5B,SAAAgB,GAAQ,OAAAA,EAAL5C,MAAkBqD,UAAUC,MAAM,G","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/Contact/Contact.styled.js","components/ContactForm/ContactForm.jsx","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js","pages/pages.styled.js"],"sourcesContent":["import styled from 'styled-components'\n\nimport { Field, Form, ErrorMessage } from \"formik\";\n\nexport const PhonebookForm = styled(Form)`\n  display:flex;\n  flex-direction:column;\n  gap: 15px;\n  border: 1px solid black;\n  border-radius:5px;\n  padding: 10px;\n  width: 100%;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const Input = styled(Field)`\n background: transparent;\n`;\nexport const BtnAddContact = styled.button`\n  color: ${({ theme }) => theme.colors.light};\n  background: ${({theme})=> theme.colors.bgTop};\n  letter-spacing: 0.06em;\n  border: 1px solid ${({ theme }) => theme.colors.light};\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  padding: 8px 12px;\n\n&:hover,\n&:focus {\n  background-color: ${({ theme }) => theme.colors.primary};\n}\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\ncolor: red;\nfont-size:12px;  \n`;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = ({ contacts: {items} }) => items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n    }\n)","import styled from 'styled-components'\n\nexport const ContactWrap = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(2)};\n  padding: ${({ theme }) => theme.spacing(10)};\n  background-color: ${({ theme }) => theme.colors.bgTop};\n  border-radius: ${({ theme }) => theme.spacing(2)};\n  color: ${({ theme }) => theme.colors.dark};\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n\n  position: relative;\n  \n`;\n\nexport const ButtonDel = styled.button`\n  background: transparent;\n  border: 1px solid ${({theme})=> theme.colors.dark};\n  border-radius:  ${({theme})=> theme.spacing(2)};\n  position: absolute;\n  top:${({theme})=> theme.spacing(1)};\n  right:${({theme})=> theme.spacing(1)};\n\n  padding: ${({ theme }) => theme.spacing(2)};\n  transition: transform ${({ theme }) => theme.animation.cubicBezier};\n  transform: scale(0.9);\n\n  &:hover,\n  &:focus {\n    transform: scale(1);\n    background: ${({theme})=> theme.colors.primary}\n  }\n`;\n\nexport const ButtonEdit = styled.button`\n  position: absolute;\n  bottom: ${({theme})=> theme.spacing(1)};\n  right:${({theme})=> theme.spacing(1)};\n  background: transparent;\n  border: 1px solid ${({theme})=> theme.colors.dark};\n  border-radius:  ${({theme})=> theme.spacing(2)};\n  padding: ${({ theme }) => theme.spacing(2)};\n  transition: transform ${({ theme }) => theme.animation.cubicBezier};\n  transform: scale(0.9);\n\n  &:hover,\n  &:focus {\n    transform: scale(1);\n    background: ${({theme})=> theme.colors.primary}\n  }\n`;\n\nexport const TextContact = styled.div`\n    color: ${({theme})=> theme.colors.light};\n    font-size:${({theme})=> theme.fontSizes.medium};\n    `","import { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { Label, ErrorMsg, Input, PhonebookForm, BtnAddContact} from \"./ContactForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { addContact } from \"redux/contacts/operations\";\n\n\n\n\nexport const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n    .test(\n      \"name\",\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      value => /^[a-zA-Zа-яА-ЯіІїЇ ]+((['][a-zA-Zа-яА-ЯіІїЇ ])?[a-zA-Zа-яА-ЯіІїЇ]*)*$/.test(value)\n    )\n    .required('Required'),\n    number: Yup.string()\n    .test(\n      \"number\",\n      \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n      value =>/\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/.test(value)\n    )\n    .required('Required'),\n  });\n\nexport const ContactForm = ()=>{\n  const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (contact, actions)=> {\n        const isExist = contacts.some(\n        item => item.name.toLowerCase() === contact.name.toLowerCase()\n            || item.number === contact.number\n        );\n    \n        if (isExist) {\n          alert(`${contact.name} or ${contact.number} is already in contacts.`);\n            return;\n        }\n        dispatch(addContact(contact));\n        actions.resetForm();\n  };\n\nreturn(\n<Formik\n    initialValues={\n      {\n          name: \"\",\n          number: \"\",\n      }}\n      \n    validationSchema={SignupSchema}\n    onSubmit={(contact, actions)=>handleSubmit(contact, actions)}\n    >\n\n  <PhonebookForm>\n    <Label>Name\n    <Input name=\"name\" type=\"text\"/>\n    <ErrorMsg name=\"name\" component=\"span\"/>\n    </Label>\n    \n    <Label>Number\n    <Input name=\"number\" type=\"tel\"/>\n    <ErrorMsg name=\"number\" component=\"span\"/>\n    </Label>\n\n   <BtnAddContact type=\"submit\">\n       Add contact\n     </BtnAddContact>\n  </PhonebookForm>\n  </Formik>\n)}\n","export const customStyles = {\n        overlay: {\n              position: 'fixed',\n              top: '0',\n              left: '0',\n              width: '100vw',\n              height: '100vh',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: 'rgba(229, 227, 234, 0.8)',\n              zIndex: '1200',        \n},\n        content: {\n            top: '50%', \n            left: '50%', \n            right: 'auto',\n            bottom: 'auto',\n            transform: 'translate(-50%, -50%)', \n            padding: '0', \n            border: 'none', \n            maxWidth: 'calc(100vw - 48px)',\n            maxHeight: 'calc(100vh - 24px)',\n            overflow: 'hidden',\n        },\n};","import { useDispatch } from 'react-redux';\nimport { Formik } from \"formik\";\nimport Modal from \"react-modal\";\nimport { SignupSchema } from \"components/ContactForm/ContactForm\";\nimport { editContact } from 'redux/contacts/operations';\nimport { Label, ErrorMsg, Input, PhonebookForm} from \"components/ContactForm/ContactForm.styled\";\nimport { customStyles } from './ContactEditor.styled';\n\nexport const ContactEditor = ({ isOpen, contact, onClose }) => {\n  const dispatch = useDispatch();\n  \n  const handleEditSubmit = (contact,action)=>{\n    dispatch(editContact(contact));\n    onClose();\n  }\n\n \n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      style={customStyles}>\n    <div>\n        <h2>Edit Contact</h2>\n        <Formik\n              initialValues={\n                {\n                    id: contact.id,\n                    name: contact.name,\n                    number: contact.number,\n                }}\n                \n              validationSchema={SignupSchema}\n              onSubmit={(contact)=>handleEditSubmit(contact)}\n              >\n\n            <PhonebookForm>\n              <Label>Name\n              <Input name=\"name\" type=\"text\"/>\n              <ErrorMsg name=\"name\" component=\"span\"/>\n              </Label>\n              \n              <Label>Number\n              <Input name=\"number\" type=\"tel\"/>\n              <ErrorMsg name=\"number\" component=\"span\"/>\n              </Label>\n\n            <button type=\"submit\">\n                Edit contact\n              </button>\n              <button onClick={onClose}>Close</button>\n            </PhonebookForm>\n       </Formik>\n  </div>\n</Modal>\n\n  );\n};\n","import { deleteContact } from \"redux/contacts/operations\";\nimport { ContactWrap, ButtonDel, ButtonEdit, TextContact } from \"./Contact.styled\";\nimport { useDispatch} from \"react-redux\";\nimport { ContactEditor } from \"components/ContactEditor/ContactEditor\";\nimport { useState } from \"react\";\nimport {AiOutlineDelete, AiOutlineEdit} from 'react-icons/ai'\n\nexport const Contact = ({contact })=>{\n\n  const dispatch = useDispatch();\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleEditClick = () => {\n    setIsEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setIsEdit(false);\n  };\n  \n    const {id, name, number} = contact;\n    return(\n    <ContactWrap>\n        <TextContact>{name}</TextContact>\n        <TextContact>{number}</TextContact>\n        <ButtonDel onClick={()=> dispatch(deleteContact(id))}><AiOutlineDelete size={16}/></ButtonDel>\n        <ButtonEdit onClick={handleEditClick}><AiOutlineEdit size={16}/></ButtonEdit>\n        {isEdit && (\n          <ContactEditor\n            isOpen = {isEdit}\n          contact={{ id, name, number }}\n          onClose={handleEditClose}\n        />\n      )}\n    </ContactWrap>\n    )\n}","import styled from 'styled-components'\n\nexport const ContactListWrap = styled.ul`\n  \n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  width:100%;\n\n`;\nexport const ListItem = styled.li`\n  margin-bottom:8px;\n  width: calc((100% - 24px));\n  height: 100%;\n  @media ( ${({ theme }) => theme.media.tablet}) {\n    width: calc((100% - 24px) / 2);\n  };\n\n  @media ( ${({ theme }) => theme.media.laptop}) {\n    width: calc((100% - 24px) / 3);\n  } \n`;","import { Contact } from \"components/Contact/Contact\";\nimport { ContactListWrap, ListItem } from \"./ContactList.styled\";\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from \"redux/contacts/selectors\";\n\nexport const ContactList =( )=>{\n  const contacts = useSelector(selectVisibleContacts);\n\n    return(\n      <div>\n        <ContactListWrap>\n          {contacts.map(contact => (\n            <ListItem key={contact.id}>\n                <Contact contact={contact}/>\n            </ListItem>\n          ))}\n        </ContactListWrap>\n        </div>\n    )\n}\n\n","import styled from 'styled-components'\n\nexport const FilterWrap = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction:column;\n  gap: 8px;\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { FilterWrap, FilterLabel } from \"./Filter.styled\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { setFilter } from \"redux/contacts/filterSlise\";\n\n\nexport const Filter =()=>{\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    const searchContact = filterContact => {\n        dispatch(setFilter(filterContact))\n      };\n\n    return(\n        <FilterWrap>\n            <FilterLabel htmlFor=\"filter\">Find contacts by name\n            <input name=\"filter\" type=\"text\" value={filter} placeholder=\"Search contact\"\n            onChange={evt => searchContact(evt.target.value)} />\n            </FilterLabel>\n        </FilterWrap>\n    )\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Container } from 'components/Container/Container.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { CenterDiv, ContactPage } from './pages.styled';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactPage>\n      <ContactForm />\n      <CenterDiv>{isLoading && <Loader/>}</CenterDiv>\n      \n      <Filter/>\n      <ContactList />\n      </ContactPage>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\n    // HOME PAGE\n\nexport const HomePage = styled.div`\n  width: 100%;\n  height: 80%;\n  box-shadow: 0px 2px 10px 1px ${({ theme }) => theme.colors.dark};\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: ${({ theme }) => theme.spacing(6)} ${({ theme }) => theme.spacing(5)};\n`;\nexport const ImgStyle = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n`;\nexport const TextWrap = styled.div`\n position: absolute;\n top: 20%;\n right: ${({ theme }) => theme.spacing(2.5)};\n width:50%;\n font-size:  ${({ theme }) => theme.fontSizes.small};\n display:flex;\n flex-direction:column;\n align-items:center;\n\n @media ( ${({ theme }) => theme.media.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes.medium}\n  }\n  @media ( ${({ theme }) => theme.media.laptop}) {\n    font-size: ${({ theme }) => theme.fontSizes.large}\n  }\n`;\n\n// CONTACTS PAGE\n\nexport const ContactPage = styled.div`\n display:flex;\n flex-direction: column;\n gap: ${({ theme }) => theme.spacing(3)};\n width: 100%;\n padding: ${({ theme }) => theme.spacing(5)};\n`;\nexport const CenterDiv = styled.div`\n  display:flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n // LOGIN PAGE\n\n export const LoginPageWrap = styled.div`\n   padding: ${({ theme }) => theme.spacing(6)};\n `;\n\n // REGISTER PAGE\n\n export const RegisterPageWrap = styled.div`\n   padding: ${({ theme }) => theme.spacing(6)};\n   display: flex;\n   flex-direction: column;\n   align-items:center;\n `;\n export const Text = styled.p`\n   color: ${({ theme }) => theme.colors.dark};\n   font-size: ${({ theme }) => theme.fontSizes.medium};\n `;"],"names":["PhonebookForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","Field","_templateObject3","BtnAddContact","_templateObject4","_ref","theme","colors","light","_ref2","bgTop","_ref3","_ref4","spacing","_ref5","primary","ErrorMsg","ErrorMessage","_templateObject5","selectContacts","contacts","items","selectIsLoading","state","isLoading","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactWrap","dark","_ref6","shadows","regular","ButtonDel","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","animation","cubicBezier","_ref13","ButtonEdit","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","TextContact","_ref21","_ref22","fontSizes","medium","SignupSchema","Yup","shape","test","value","required","number","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","actions","some","item","alert","concat","addContact","resetForm","handleSubmit","children","_jsxs","type","component","customStyles","overlay","position","top","left","width","height","display","justifyContent","alignItems","backgroundColor","zIndex","content","right","bottom","transform","padding","border","maxWidth","maxHeight","overflow","ContactEditor","isOpen","onClose","Modal","style","id","action","editContact","handleEditSubmit","onClick","Contact","_useState","useState","_useState2","_slicedToArray","isEdit","setIsEdit","deleteContact","AiOutlineDelete","size","AiOutlineEdit","ContactListWrap","ListItem","media","tablet","laptop","ContactList","map","FilterWrap","FilterLabel","Filter","htmlFor","placeholder","onChange","evt","filterContact","target","setFilter","Contacts","useEffect","fetchContacts","Container","ContactPage","CenterDiv","Loader","HomePage","ImgStyle","TextWrap","small","large","LoginPageWrap","_templateObject6","RegisterPageWrap","_templateObject7","Text","_templateObject8"],"sourceRoot":""}